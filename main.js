!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const s=n(3),i=n(1),o=n(2);!function(e){const t=new s.ResilientSocket(e);t.onOpen(e=>console.log("Socket open")),t.onClose(e=>console.log("Socket closed")),t.onError(e=>console.log("Reconnection failed")),t.onReconnect(e=>{const t=Date.now()-Number(e.disconnectedTime);console.log(`Disconnected for ${t} milliseconds`)}),t.onMessage(e=>{const t=o.parseJson(e.data);console.log("received",t)})}("https://amatiasq.github.io"===location.origin?"wss://ts-socket.amatiasq.com":"ws://localhost:"+i.DEFAULT_PORT)},function(e){e.exports=JSON.parse('{"DEFAULT_PORT":52029}')},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.parseJson=void 0,t.parseJson=function(e){try{return JSON.parse(e)}catch(t){throw console.warn("Invalid JSON:",e),t}}},function(e,t,n){"use strict";function s(){const e=new Set;return t.subscribe=function(t){return e.add(t),()=>e.delete(t)},t;function t(t){return e.forEach(e=>e(t)),Boolean(e.size)}}n.r(t),n.d(t,"ResilientSocket",(function(){return i}));class i{constructor(e,{reconnectionDelay:t=100,maxReconnectAttempts:n=14}={}){this.uri=e,this.reconnectionDelay=100,this.reconnectAttempts=0,this.disconnectedAt=new Date,this.isReconnecting=!1,this.isFirstConnection=!0,this.messageQueue=[],this.emitOpen=s(),this.onOpen=this.emitOpen.subscribe,this.emitError=s(),this.onError=this.emitError.subscribe,this.emitClose=s(),this.onClose=this.emitClose.subscribe,this.emitMessage=s(),this.onMessage=this.emitMessage.subscribe,this.emitReconnect=s(),this.onReconnect=this.emitReconnect.subscribe,this.connectionOpen=this.connectionOpen.bind(this),this.processMessage=this.processMessage.bind(this),this.connectionLost=this.connectionLost.bind(this),this.ws=this.init(),this.RECONNECTION_DELAY=t,this.MAX_RECONNECT_ATTEMPTS=n}get isConnected(){return!this.isFirstConnection&&!this.isReconnecting}send(e){this.isConnected?this.ws.send(e):this.messageQueue.push(e)}init(){const e=new WebSocket(this.uri);return e.addEventListener("open",this.connectionOpen),e.addEventListener("message",this.processMessage),e.addEventListener("error",this.connectionLost),e.addEventListener("close",this.connectionLost),e}unbind(){this.ws.removeEventListener("open",this.connectionOpen),this.ws.removeEventListener("message",this.processMessage),this.ws.removeEventListener("error",this.connectionLost),this.ws.removeEventListener("close",this.connectionLost)}processMessage(e){this.emitMessage(e)}connectionOpen(e){this.resetReconnectionCounters(),this.isFirstConnection?(this.isFirstConnection=!1,this.emitOpen(e)):this.emitReconnect(Object.assign(e,{disconnectedTime:this.disconnectedAt})),this.processMessageQueue()}connectionLost(e){this.isReconnecting||(this.reconnectAttempts>this.MAX_RECONNECT_ATTEMPTS&&this.reconnectionFailed(e),0===this.reconnectAttempts&&(this.isReconnecting=!0,this.disconnectedAt=new Date),this.unbind(),this.scheduleReconnection())}resetReconnectionCounters(){this.reconnectionDelay=this.RECONNECTION_DELAY,this.reconnectAttempts=0,this.isReconnecting=!1}processMessageQueue(){for(const e in this.messageQueue)this.ws.send(e);this.messageQueue.length=0}reconnectionFailed(e){return this.emitError(e),console.error(`Websocket aborted after ${this.reconnectAttempts} attempts`)}scheduleReconnection(){const e=`Socket closed. Waiting ${this.reconnectionDelay/1e3}s`,t="Reconnecting...",n=this.reconnectAttempts<1e3;console.debug(`${e} ${n?t:""}`),setTimeout(()=>{n||console.debug(t),this.reconnectionDelay*=2,this.reconnectAttempts++,this.ws=this.init()},this.reconnectionDelay)}close(){this.unbind(),this.ws.onclose=this.emitClose,this.ws.close()}}}]);
//# sourceMappingURL=main.js.map